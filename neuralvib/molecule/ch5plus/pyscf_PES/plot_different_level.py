"""Plot energy difference under different levels"""

import copy
import os

import numpy as np
import jax
import jax.numpy as jnp
import matplotlib.pyplot as plt

from neuralvib.molecule.ch5plus.JBB_Full_PES.convert_coors import (
    config_cartesian2jbb_cartesian_input_xn,
)
from neuralvib.molecule.ch5plus.JBB_Full_PES.jbbjax import jbbf2py_pes_cartesian
from neuralvib.molecule.ch5plus.equilibrium_config import (
    equilibrium_bowman_jpca_2006_110_1569_1574,
)
from neuralvib.molecule.ch5plus.pyscf_PES.CCSD import pyscf_ccsd_pes_cartesian
from neuralvib.molecule.ch5plus.pyscf_PES.dft import pyscf_dft_pes_cartesian
from neuralvib.molecule.ch5plus.pyscf_PES.hf import pyscf_hf_pes_cartesian
from neuralvib.molecule.ch5plus.pyscf_PES.mp2 import pyscf_mp2_pes_cartesian
from neuralvib.molecule.ch5plus.stationary_points import (
    saddle_c2v_bowman_jpca_2006_110_1569_1574,
)
from neuralvib.utils.convert import (
    convert_hartree_to_inverse_cm,
    convert_inverse_cm_to_hartree,
)


def main():
    """Plotting the energy difference under different
    levels, aka, HF, DFT and CCSD and compare them
    with the JBB Full PES result

    The plot is generated by scanning one of the
    C-H bond while leaving the others fixed.
    """
    hartree2cminv = convert_hartree_to_inverse_cm(1.0)
    basislist = [
        "cc-pVTZ",
        "cc-pVQZ",
        "aug-cc-pVTZ",
    ]
    dft_xc = "M05"

    total_steps = 25
    move_boundary = 0.25
    x_axis = np.linspace(-move_boundary, move_boundary, total_steps)
    # move the z coordinate of the last hydrogen
    move_index = -1

    c2v_cartesian = np.array(saddle_c2v_bowman_jpca_2006_110_1569_1574()).reshape(6, 3)

    for basis in basislist:
        energy_hf_list = []
        energy_mp2_list = []
        energy_dft_list = []
        energy_ccsd_list = []
        energy_pes_list = []
        print(f"Current Basis = {basis}")
        for i in range(total_steps):
            config_cartesian = copy.deepcopy(c2v_cartesian)
            config_cartesian = config_cartesian.reshape(-1)
            config_cartesian[move_index] = (
                c2v_cartesian.reshape(-1)[move_index] + x_axis[i]
            )
            config_cartesian = config_cartesian.reshape(6, 3)
            config_cartesian_jbb = config_cartesian2jbb_cartesian_input_xn(
                config_cartesian.reshape(-1)
            )
            print(f"Step {i} with config\n{config_cartesian}")

            energy_hf = (
                pyscf_hf_pes_cartesian(config_cartesian, basis=basis) * hartree2cminv
            )
            energy_mp2 = (
                pyscf_mp2_pes_cartesian(config_cartesian, basis=basis) * hartree2cminv
            )
            energy_dft = (
                pyscf_dft_pes_cartesian(config_cartesian, basis=basis, xc=dft_xc)
                * hartree2cminv
            )
            energy_ccsd = (
                pyscf_ccsd_pes_cartesian(config_cartesian, basis=basis) * hartree2cminv
            )
            energy_pes = jbbf2py_pes_cartesian(config_cartesian_jbb) * hartree2cminv

            energy_hf_list.append(energy_hf)
            energy_mp2_list.append(energy_mp2)
            energy_dft_list.append(energy_dft)
            energy_ccsd_list.append(energy_ccsd)
            energy_pes_list.append(energy_pes)

        fig, ax = plt.subplots(figsize=(7, 6), dpi=600)
        ax.plot(x_axis, energy_hf_list, "-.", label=f"HF-{basis}")
        ax.plot(x_axis, energy_mp2_list, "-.", label=f"MP2-{basis}")
        ax.plot(x_axis, energy_dft_list, "--", label=f"DFT-{basis}/{dft_xc}")
        ax.plot(x_axis, energy_ccsd_list, "-.", label=f"CCSD-{basis}")
        ax.plot(x_axis, energy_pes_list, "-", label="JBB Full PES")
        plt.xlabel(f"C-H bond of #{move_index} hydrogen (a.u.)")
        plt.ylabel("Energy Difference to Corresponding Global Minimum (cm-1)")
        plt.legend()

        save_dir_name = "./neuralvib/molecule/ch5plus/pyscf_PES/"
        filename = f"CH5+EnergyDifferenceAtDifferentLevel-{basis}.png"
        save_filename = os.path.join(save_dir_name, filename)
        plt.savefig(save_filename)


if __name__ == "__main__":
    main()
